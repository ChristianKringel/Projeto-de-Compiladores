PARSER_BEGIN(Karloff)
import java.io.*;
public class Karloff {

  public static void main(String args[]) throws ParseException,IOException {
    
 Karloff analisador = new Karloff(new FileInputStream(args[0]));
 analisador.Karloff();
  }

}

PARSER_END(Karloff)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <APARENTESES: "(">
| <FPARENTESES: ")">
| <VOID: "void">
| <FLOAT: "float">
| <NEWVAR: "newVar">
| <PRINTOUT: "printout">
| <TRUE: "true" >
| <FALSE: "false">
| <FUNCTION: "fun">

}

TOKEN: 
{
  <WHILE: "while">
| <IF: "if">
| <THEN: "then">
| <RETURN: "return">
}



TOKEN :
{
  <NUM : (["0"-"9"]) + (["."])  (["0"-"9"]) + >
 |< ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])*>

}

TOKEN: 
{
    <ATRIBUICAO: "=" > 
}

TOKEN: 
{
    <PONTOVIRGULA: ";">
}

TOKEN:
{
  <SOMA: "+"> 
| <SUB: "-"> 
| <MULT: "*">
| <DIV: "/"> 
| <AND: "&"> 
| <OR: "|"> 
| <MAIORQUE: ">"> 
| <MENORQUE: "<"> 
| <IGUAL: "=="> 
}


void Karloff () :
{Token t;}
{

(
    // palavras reservadas: 
  <MAIN> { System.out.println("Palavra reservada: main");}
| <ACHAVES> { System.out.println("Abre chaves: {");}
| <FCHAVES> { System.out.println("Fecha chaves: }");}
| <VOID> {System.out.println("Palavra reservada: Void");}
| <APARENTESES> {System.out.println("Abre parenteses: (");} 
| <FPARENTESES> {System.out.println("Fecha Parenteses: )");} 
| <FLOAT> {System.out.println("Palavra reservada: float");} 
| <NEWVAR> {System.out.println("Palavra reservada: newvar");} 
| <PRINTOUT> {System.out.println("Palavra reservada: printout");} 
| <FUNCTION> {System.out.println("Palavra reservada: fun");}

    // ATRIBUICAO
| <ATRIBUICAO> {System.out.println("Atribuição: ="); }
    // PONTO VIRGULA
| <PONTOVIRGULA> {System.out.println("Ponto e Virgula: ;");}
    // BOOLEAN
| <TRUE> {System.out.println("Booleano: True");}
| <FALSE> {System.out.println("Booleano: False");}
    // Loops
| <WHILE> {System.out.println("Palavra reservada de loop: while");} 
| <IF> {System.out.println("Palavra reservada de loop: if");} 
| <THEN> {System.out.println("Palavra reservada de loop: then");}
| <RETURN> {System.out.println("Retorno de funcao: return");}

    // Operadores
| <SOMA> {System.out.println("Identificador de operação: soma");}
| <SUB> {System.out.println("Identificador de operação: subtração");}
| <MULT> {System.out.println("Identificador de operação: multiplicação");}
| <DIV> {System.out.println("Identificador de operação: divisão");} 
| <AND> {System.out.println("Identificador de operação: and");}
| <OR> {System.out.println("Identificador de operação: or");}
| <MAIORQUE> {System.out.println("Identificador de operação: maiorque");}
| <MENORQUE> {System.out.println("Identificador de operação: menorque");} 
| <IGUAL> {System.out.println("Identificador de operação: igual");}
    // ids
| t=<NUM> { System.out.println("Número: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
)*
<EOF> 
// {System.out.println("");}

}




